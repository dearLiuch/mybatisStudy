<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (C) 2017 Baidu, Inc. All Rights Reserved.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lch.study.mybatisstudy.mapper.MessageMapper">


    <resultMap id="messageResult" type="com.lch.study.vo.Message">
        <id column="id" property="id"/>
        <result column="msg_id" property="msgId"/>
        <result column="status" property="status"/>
        <result column="content" property="content"/>
        <result column="deleted" property="deleted"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <resultMap id="messageAndDetailResult" type="com.lch.study.vo.Message">
        <id column="id" property="id"/>
        <result column="msg_id" property="msgId"/>
        <result column="status" property="status"/>
        <result column="content" property="content"/>
        <result column="deleted" property="deleted"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <association column="msg_id" property="messageDetail" select="mapper.MessageDetailMapper.getMessageByMsgId"/>
    </resultMap>

    <resultMap id="messageAndDetailResult1" type="com.lch.study.vo.Message">
        <id column="id" property="id"/>
        <result column="msg_id" property="msgId"/>
        <result column="status" property="status"/>
        <result column="content" property="content"/>
        <result column="deleted" property="deleted"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <association column="{msgId=msg_id, content=content}" property="messageDetail"
                     select="mapper.MessageDetailMapper.getMessageByMsgIdAndCreateTime"/>
    </resultMap>


    <sql id="allColumns">
        id, msg_id, status, content, deleted, create_time, update_time
    </sql>

    <sql id="updateAllColumns">
        msg_id, status, content, deleted, create_time
    </sql>


    <!--
        id：这条SQL的唯一表示
        parameterType：定义参数类型
        resultType：定义返回值类型
        <select id="getMessageById" parameterType="long" resultMap="messageResult">
    -->
    <select id="getMessageById" resultMap="messageResult">
        select
            <include refid="allColumns"/>
        from tb_message where id = #{id}
    </select>

    <select id="getMessageMapById" resultType="map">
        select
        <include refid="allColumns"/>
        from tb_message where id = #{id}
    </select>


    <select id="getMessageByMsgId" resultMap="messageResult">
        select
        <include refid="allColumns"/>
        from tb_message where msg_id = #{msgId}
        <!--
        from tb_message where msg_id = ${msgId} -->
    </select>


    <select id="getMessageByMap" parameterType="map" resultMap="messageResult">
        select
        <include refid="allColumns"/>
        from tb_message where id = #{id} and msg_id = #{msgId}
    </select>


    <select id="getMessageByAnnotation" resultMap="messageResult">
        select
        <include refid="allColumns"/>
        from tb_message where id = #{id} and msg_id = #{msgId}
    </select>
    <select id="getMessageByMessage" parameterType="com.lch.study.vo.Message" resultMap="messageResult">
        select
        <include refid="allColumns"/>
        from tb_message where id = #{id} and msg_id = #{msgId}
    </select>




    <insert id="insert" parameterType="message" keyProperty="id">
        insert into tb_message(<include refid="updateAllColumns"/>) values (#{msgId}, #{status}, #{content}, #{deleted}, #{createTime})
    </insert>

    <insert id="insertAndGetIdBack" parameterType="message" keyProperty="id" useGeneratedKeys="true">
        insert into tb_message(<include refid="updateAllColumns"/>) values (#{msgId}, #{status}, #{content}, #{deleted}, #{createTime})
    </insert>



    <update id="updateContentById" parameterType="message">
        update tb_message set content=#{content} where id=#{id}
    </update>


    <delete id="delById" parameterType="long">
        delete from tb_message where id = #{id}
    </delete>


    <select id="getMessageAndMessageDetailById" parameterType="long" resultMap="messageAndDetailResult">
        select
            <include refid="allColumns"/>
        from tb_message where id = #{id}
    </select>

    <select id="getMessageAndMessageDetailById1" parameterType="long" resultMap="messageAndDetailResult1">
        select
        <include refid="allColumns"/>
        from tb_message where id = #{id}
    </select>

</mapper>